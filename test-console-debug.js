// üß™ SCRIPT DE TEST - Copier dans la console (F12)

console.log('üß™ TEST DE SUPPRESSION DE COLIS');
console.log('‚ïê'.repeat(60));

// 1. V√©rifier le DataStore
if (typeof DataStore === 'undefined') {
    console.error('‚ùå DataStore non charg√© !');
} else {
    console.log('‚úÖ DataStore charg√©');
    
    // 2. V√©rifier les colis
    console.log('\nüì¶ COLIS DISPONIBLES:');
    console.log('   Total:', DataStore.colis ? DataStore.colis.length : 0);
    
    if (DataStore.colis && DataStore.colis.length > 0) {
        console.log('\nüìã Liste des colis:');
        DataStore.colis.forEach((c, i) => {
            console.log(`   ${i + 1}. ID: ${c.id || c._id}`);
            console.log(`      _id: ${c._id}`);
            console.log(`      id: ${c.id}`);
            console.log(`      Tracking: ${c.tracking || c.trackingNumber}`);
            console.log(`      Exp√©diteur: ${c.expediteur?.nom || 'N/A'}`);
            console.log('');
        });
        
        // 3. Test de suppression du premier colis
        const premierColis = DataStore.colis[0];
        const colisId = premierColis.id || premierColis._id;
        
        console.log('üéØ COLIS √Ä TESTER:');
        console.log('   ID:', colisId);
        console.log('   _id:', premierColis._id);
        console.log('   Tracking:', premierColis.tracking || premierColis.trackingNumber);
        
        console.log('\nüí° POUR SUPPRIMER CE COLIS:');
        console.log(`   window.handleColisAction('delete', '${colisId}')`);
        
        console.log('\nüìù OU TESTEZ DIRECTEMENT:');
        console.log(`   DataStore.deleteColis('${colisId}')`);
        
    } else {
        console.warn('‚ö†Ô∏è Aucun colis trouv√©');
        console.log('üí° Cr√©ez d\'abord un colis pour tester la suppression');
    }
}

console.log('\n‚ïê'.repeat(60));
console.log('‚úÖ Test termin√©');
