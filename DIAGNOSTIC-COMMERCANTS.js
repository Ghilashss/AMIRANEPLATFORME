// üîç DIAGNOSTIC : Pourquoi les commer√ßants ne s'affichent pas dans le tableau

console.log('========================================');
console.log('üîç DIAGNOSTIC COMMER√áANTS - D√âBUT');
console.log('========================================\n');

// 1. V√©rifier sessionStorage
console.log('1Ô∏è‚É£ V√âRIFICATION SESSIONSTORAGE');
console.log('   auth_token:', sessionStorage.getItem('auth_token') ? '‚úÖ Pr√©sent' : '‚ùå Absent');
console.log('   user:', sessionStorage.getItem('user') ? '‚úÖ Pr√©sent' : '‚ùå Absent');
console.log('   role:', sessionStorage.getItem('role') || '‚ùå Absent');

if (sessionStorage.getItem('user')) {
    try {
        const user = JSON.parse(sessionStorage.getItem('user'));
        console.log('   user.agence:', user.agence ? '‚úÖ ' + user.agence : '‚ùå Absent');
        console.log('   user.role:', user.role || '‚ùå Absent');
    } catch (e) {
        console.error('   ‚ùå Erreur parsing user:', e);
    }
}

// 2. V√©rifier localStorage
console.log('\n2Ô∏è‚É£ V√âRIFICATION LOCALSTORAGE');
console.log('   token:', localStorage.getItem('token') ? '‚úÖ Pr√©sent' : '‚ùå Absent');
console.log('   agent_token:', localStorage.getItem('agent_token') ? '‚úÖ Pr√©sent' : '‚ùå Absent');

// 3. V√©rifier le tableau HTML
console.log('\n3Ô∏è‚É£ V√âRIFICATION TABLEAU HTML');
const tbody = document.getElementById('commercantsTableBody');
console.log('   tbody trouv√©:', tbody ? '‚úÖ OUI' : '‚ùå NON');
if (tbody) {
    console.log('   tbody.innerHTML length:', tbody.innerHTML.length);
    console.log('   Nombre de <tr>:', tbody.querySelectorAll('tr').length);
}

// 4. Tester l'API manuellement
console.log('\n4Ô∏è‚É£ TEST API /api/auth/users?role=commercant');
const token = sessionStorage.getItem('auth_token') || localStorage.getItem('token');

if (!token) {
    console.error('   ‚ùå Aucun token disponible - impossible de tester l\'API');
} else {
    console.log('   üîë Token:', token.substring(0, 20) + '...');
    
    fetch('http://localhost:1000/api/auth/users?role=commercant', {
        headers: {
            'Authorization': `Bearer ${token}`
        }
    })
    .then(response => {
        console.log('   üì° Status:', response.status);
        return response.json();
    })
    .then(result => {
        console.log('   üì¶ Success:', result.success);
        console.log('   üìä Nombre de commer√ßants:', result.data ? result.data.length : 0);
        
        if (result.data && result.data.length > 0) {
            console.log('\n   üìã LISTE DES COMMER√áANTS:');
            result.data.forEach((c, index) => {
                console.log(`   ${index + 1}. ${c.nom} ${c.prenom || ''} (${c.email})`);
                console.log(`      - ID: ${c._id}`);
                console.log(`      - Agence: ${c.agence || 'Non d√©finie'}`);
                console.log(`      - Cr√©√© le: ${new Date(c.createdAt).toLocaleString('fr-FR')}`);
            });
        } else {
            console.log('   ‚ÑπÔ∏è Aucun commer√ßant dans la base de donn√©es');
        }
    })
    .catch(error => {
        console.error('   ‚ùå Erreur API:', error);
    });
}

// 5. V√©rifier si le script commercants-manager.js est charg√©
console.log('\n5Ô∏è‚É£ V√âRIFICATION SCRIPTS');
const scripts = Array.from(document.querySelectorAll('script[src*="commercants-manager"]'));
console.log('   commercants-manager.js charg√©:', scripts.length > 0 ? '‚úÖ OUI (' + scripts.length + ')' : '‚ùå NON');

// 6. V√©rifier la section Commer√ßants
console.log('\n6Ô∏è‚É£ V√âRIFICATION SECTION COMMER√áANTS');
const section = document.getElementById('commercants-section');
console.log('   Section trouv√©e:', section ? '‚úÖ OUI' : '‚ùå NON');
if (section) {
    console.log('   Section visible:', section.style.display !== 'none' ? '‚úÖ OUI' : '‚ùå NON');
}

console.log('\n========================================');
console.log('üîç DIAGNOSTIC COMMER√áANTS - FIN');
console.log('========================================');
console.log('\nüí° INSTRUCTIONS:');
console.log('1. Ouvrez la console (F12)');
console.log('2. Collez ce script et appuyez sur Entr√©e');
console.log('3. Analysez les r√©sultats ci-dessus');
console.log('4. Cherchez les ‚ùå pour identifier le probl√®me');
